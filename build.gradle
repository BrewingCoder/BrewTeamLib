buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'idea'
apply plugin: 'maven-publish'

version = minecraft_version + "-" + mod_version
group = mod_group
archivesBaseName = mod_name

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: mappings_channel, version: mappings_version
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            mods {
                brewteamlib {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            mods {
                brewteamlib {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'rfllib', '--all', '--output', file('src/generated/resources/')
            mods {
                brewteamlib {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven { url = "http://dvs1.progwml6.com/files/maven" } //JEI
    maven { url = "http://maven.tterrag.com" } //TOP
    maven { url = "https://maven.blamejared.com" } //Craft Tweaker
    maven { url = "https://maven.theillusivec4.top" } //Curios
}

dependencies {
    minecraft 'net.minecraftforge:forge:' + minecraft_version + '-' + forge_version
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                'FMLAT'                   : 'accesstransformer.cfg',
                "Specification-Title"     : mod_name,
                "Specification-Vendor"    : mod_group,
                "Specification-Version"   : mod_version,
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : mod_version,
                "Implementation-Vendor"   : mod_group,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')

task apiJar(type: Jar, dependsOn: 'classes') {
    classifier = 'api'
    from(sourceSets.main.output) {
        include 'com/brewingcoder/brewteamlib/api/**'
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task deobfJar(type:Jar) {
    from sourceSets.main.output
    classifier 'deobf'
}

artifacts {
    archives jar
    archives sourcesJar
    archives deobfJar
    archives apiJar
}


// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = mod_group
            artifactId = project.archivesBaseName
            version = mod_version
            artifact jar
            artifact sourcesJar
            artifact deobfJar
            artifact apiJar
        }
    }
     repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}